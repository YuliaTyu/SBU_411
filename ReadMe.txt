https://github.com/okovtun/SBU_411.git
https://www.youtube.com/playlist?list=PLeqyOOqxeiIPOQpgNXXxpmJiUToN-E6oG

IEEE-754:
http://www.softelectro.ru/ieee754.html

/////////////////////////////////////////////////////////////////////////////////////////
/////////////////					Dynamic Arrays						/////////////////
/////////////////////////////////////////////////////////////////////////////////////////

TODO:
1. Добавить функции:
	??? Allocate(???);			//Выделяет память под двумерный динамический массив
	??? Clear(???);				//Удаляет память, занимаемую двумерным динамическим массивом

3. СДЕЛАТЬ COMMIT!!!! и создать ветку 'DynamicTemplates', 
   в этой ветке шаблонизировать все функции для работы с динамическими массивами,
   как одномерными, так и двумерными;

4. СДЕЛАТЬ COMMIT!!!! и от ветки 'DynamicTemplates' создать ветку 'DynamicOptimisation',
   в этой ветке провести оптимизацию функций;

TODO:
1. Вывести двумерный динамический массив на экран используя арифметику указателей
   и оператор разыменования;
2. В проект 'DynamicMemory' добавить следующие функции:

	??? Allocate(???);			//Выделяет память под двумерный динамический массив
	??? Clear(???);				//Удаляет память, занимаемую двумерным динамическим массивом

	??? push_row_back(???);		//добавляет строку в конец массива
	??? push_row_front(???);	//добавляет строку в начало массива
	??? insert_row(???);		//добавляет строку в массив по указанному индексу

	??? push_col_back(???);		//добавляет столбец в конец массива
	??? push_col_front(???);	//добавляет столбец в начало массива
	??? insert_col(???);		//добавляет столбец в массив по указанному индексу

	??? pop_row_back(???);		//удаляет строку из конеца массива
	??? pop_row_front(???);		//удаляет строку из начала массива
	??? erase_row(???);			//удаляет строку из массива по указанному индексу

	??? pop_col_back(???);		//удаляет столбец из конеца массива
	??? pop_col_front(???);		//удаляет столбец из начала массива
	??? erase_col(???);			//удаляет столбец из массива по указанному индексу

3. СДЕЛАТЬ COMMIT!!!! и создать ветку 'DynamicTemplates', 
   в этой ветке шаблонизировать все функции для работы с динамическими массивами,
   как одномерными, так и двумерными;

4. СДЕЛАТЬ COMMIT!!!! и от ветки 'DynamicTemplates' создать ветку 'DynamicOptimisation',
   в этой ветке провести оптимизацию функций;

DONE:
1. В Solution 'Pointers' добавить проект 'Split', и в этом проекте,
   массив из 10 элементов разделить на два массива минимально возможного размера:
   even[] и odd[]. Массив even[] должен содержать все четные значения из исходного массива,
   а odd[] - все нечетные значения.
2. В проект 'DynamicMemory' добавить следующие функции:
	??? push_front(???);
	??? insert(???);	//добавляет значение по указанному индексу

	??? pop_back(???);	//удаляет последний элемент массива
	??? pop_front(???);	//удаляет нулевой элемент массива
	??? erase(???);		//удаляет элемент массива по указанному индексу

/////////////////////////////////////////////////////////////////////////////////////////
/////////////////						Arrays							/////////////////
/////////////////////////////////////////////////////////////////////////////////////////

TODO:
0. !!!!!!!!!!!!!	Выучить теорию по указателям	!!!!!!!!!!!!!
1. От ветки 'FunctionTemplates' создать ветку 'SeparatedTemplates' и в ней 
   вынести шаблонные функции в отдельные файлы;
   https://learn.microsoft.com/en-us/cpp/cpp/templates-cpp?view=msvc-170

   -------- Задания повышенной сложности (не обязательны для выполнения) ----------

2. *** Обеспечить использование перегруженных и шаблонных функций в других проектах
   при помощи статической библиотеки. 
	На отдельных ветках:
	2.1.	собрать статическую библиотеку (*.lib-файл) из перегруженных функций, 
			и проветрить ее на другом проекте, например 'Functions\LIBcheck';
	2.2.	собрать статическую библиотеку (*.lib-файл) из шаблонных функций, 
			и проветрить ее на другом проекте, например 'Functions\TemplatedLIBcheck';
			https://learn.microsoft.com/en-us/troubleshoot/developer/visualstudio/cpp/libraries/faq-standard-cpp-library
			https://learn.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-static-library-cpp?view=msvc-170
			https://blogs.embarcadero.com/create-and-use-static-library-lib-and-dynamic-dlls-in-c-builder/
3. *** Обеспечить использование перегруженных и шаблонных функций в других проектах
   при помощи динамической библиотеки (*.dll-файл). 
	На отдельных ветках:
	3.1.	собрать динамическую библиотеку (*.dll-файл) из перегруженных функций, 
			и проветрить ее на другом проекте, например 'Functions\DLLcheck';
	3.2.	собрать динамическую библиотеку (*.dll-файл) из шаблонных функций, 
			и проветрить ее на другом проекте, например 'Functions\TemplatedDLLcheck';
			https://learn.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-dynamic-link-library-cpp?view=msvc-170

DONE:
1. Добить разделение функций на файлы;
2. Написать функцию UniqueRand(), которая заполняет массив УНИКАЛЬНЫМИ случайными числами;

DONE:
В проекте 'Functions\Arrays' перегрузить все существующие функции для двумерных массивов типа 'int' и 'double';


DONE:
В проект 'Functions\Arrays' добавить следующие функции:
	??? Sum(???);		//Возвращает сумму элементов массива
	??? Avg(???);		//Возвращает среднее-арифметическое элементов массива
	??? MinValueIn(???);//Возвращает минимальное значение в массиве
	??? MaxValueIn(???);//Возвращает максимальное значение в массиве
	??? ShiftLeft(???);	//Сдвигает массив на заданное число элементов влево
	??? ShiftRight(???);//Сдвигает массив на заданное число элементов вправо

DONE:
1. В проекте 'Arrays' написать код, который:
	 -позволяет ввести элементы массива с клавиатуры;
	 -выводит массив на экран в прямом порядке (от 0-го элемента до последнего);
	 -выводит массив на экран в обратном порядке (от последнего элемента до 0-го);
	 -вычисляет сумму элементов массива;
	 -вычисляет среднее-арифметическое элементов массива;
	 -находит минимальное и максимальное значение в массиве;
	!!!	ВСЕ ЭТИ МАНИПУЛЯЦИИ ПРОВОДЯТСЯ С ОДНИМ МАССИВОМ, т.е., 
	ДЛЯ КАЖДОЙ ЗАДАЧИ НЕ НУЖНО СОЗДАВАТЬ ОТДЕЛЬНЫЙ МАССИВ	!!!
2. В Solution 'Arrays' добавить проект 'Shift' и в этом проекте есть массив из 10 элементов,
   проинициализированный значениями от 0 до 9. Нужно выполнить циклический сдвиг этого массива
   на заданное число элементов влево. Количество сдвигов пользователь вводит с клавиатуры.

	0	1	1	2	3	5	8	13	21	34
	1	1	2	3	5	8	13	21	34	 0
	1	2	3	5	8	13	21	34	 0	 1
	2	3	5	8	13	21	34	 0	 1	 1
	3	5	8	13	21	34	 0	 1	 1	 2

3. С клавиатуры вводится целое число, и программа переводит это число в двоичную систему счисления;
4. С клавиатуры вводится целое число, и программа переводит это число в шестнадцатеричную систему счисления;

/////////////////////////////////////////////////////////////////////////////////////////
/////////////////					Control structures					/////////////////
/////////////////////////////////////////////////////////////////////////////////////////

DONE:
1.
	* * * * * 
	* * * * * 
	* * * * * 
	* * * * * 
	* * * * * 

2.
	*
	* * 
	* * *
	* * * * 
	* * * * * 

3.
	* * * * * 
	* * * *
	* * *
	* *
	* 
	
4.
	* * * * *
	  * * * *
	    * * *
	      * *
	        *
	
5.
	        *
	      * *
	    * * *
	  * * * *
	* * * * *

6.
	    /\
	   /  \
	  /    \
	 /      \
	/        \
	\        /
	 \      /
	  \    /
	   \  /
	    \/

7.
	+ - + - +
	- + - + -
	+ - + - +
	- + - + -
	+ - + - +

8. https://github.com/okovtun/SBU_411/blob/master/ControlStructures/Picture/ChessBoard.jpg
9. https://github.com/okovtun/SBU_411/blob/master/ControlStructures/Picture/HardChess.jpg
10. ***** Вывести на экран треугольник Паскаля;
11. Свою дату рождения раздклить на 2 группы по 4 разряда, и перевести эти группы в двоичную,
    а потом в Шестнадцатеричную системы счисления, и сделать проверку;


TOREAD:
Длинная арифметика;

DONE:
1. Написать программу, которая вычисляет факториал числа, введенного с клавиатуры.		DONE
   Факториал - это произведение ряда чисел от 1 до указанного, например:
	5! = 1*2*3*4*5 = 120;
2. Написать программу, которая возводит указанное число в указанную степень,			DONE
   основание и показатель степени вводятся с клавиатуры;
3. Написать программу, которая выводит на экран таблицу ASCII-символов по 16 в строке;	DONE
4. Вывести на экран ряд Фибоначчи до указанного предела. Предел вводит пользователь с клавиатуры;	DONE
5. Вывести на экран заданное количество чисел из ряда Фибоначчи.
   Количество чисел задает пользователь с клавиатуры;
6. *Вывести на экран ряд простых чисел до указанного предела.			DONE
   Простым называется число, которое делится без остатка только на себя и на единицу;
7. *** Вывести на экран ряд совершенных чисел.
   Совершенным называется число, которое равно сумме всех своих положительных делителей;
8. Вывести на экран таблицу умножения;
9. Вывести на экран таблицу Пифагора;

DONE:
1. В калькуляторе должна быть возможность к предыдущему результату применять другие операции,
   как в обычном Windows-калькуляторе;
2. В Solution 'ControlStructures' добавить проект 'Shooter', и в этои проекте,
   пользователь нажимает на клавиши WASD, и программа выводит на экран действие:
	w - вперед
	s - назад
	a - влево
	d - вправо
	Space - прыжок
	Enter - огонь
	Escape - выход
3. Напомнить про Палиндром;

TODO:
1. Следующие задачи нужно решить без компилятора 
   (в компиляторе можно только проверить решение)
1.1.	int i = 3;
		i = ++i + ++i;
		cout << i << endl;
---------------------------
1.2.	int i = 3;
		i = i++ + ++i;
		cout << i << endl;
---------------------------
1.3.	int i = 3;
		i = i++ + 1 + ++i*2;
		cout << i << endl;
---------------------------
1.4.	int i = 3;
		i = i++ + 1 + ++i*=2;
		cout << i << endl;
---------------------------
1.5.	int i = 3;
		i += i++ + 1 + ++i*=2;
		cout << i << endl;
---------------------------

2. Написать калькулятор, который вычисляет выражения вида:
	2+3
	2+3=5;
3. Пользователь вводит число с клавиатуры, и программа говорит число Палиндром, или нет.
   Палиндром - это число, которое читается одинаково в обоих направлениях, например:
	121
	1221
	12321

DONE:
1. Выучить теорию:
	https://github.com/okovtun/SBU_411/blob/master/DataTypes.pdf
2. Решить все задачи из файла VariablesTask.pdf:
	https://github.com/okovtun/SBU_411/blob/master/DataTypes/VariablesTask.pdf

DONE:
0. Выучить теорию;
1. Вывести в консоль стишок "В лесу родилась Ёлочка".
   Стишок должен быть выровнен по середине окна консоли,
   а его куплеты должны быть разделены пустой строкой.